% Largest product in a series
% Problem 8
% 
% The four adjacent digits in the 1000-digit number that have the greatest
% product are 9 × 9 × 8 × 9 = 5832.
% 
% 73167176531330624919225119674426574742355349194934
% 96983520312774506326239578318016984801869478851843
% 85861560789112949495459501737958331952853208805511
% 12540698747158523863050715693290963295227443043557
% 66896648950445244523161731856403098711121722383113
% 62229893423380308135336276614282806444486645238749
% 30358907296290491560440772390713810515859307960866
% 70172427121883998797908792274921901699720888093776
% 65727333001053367881220235421809751254540594752243
% 52584907711670556013604839586446706324415722155397
% 53697817977846174064955149290862569321978468622482
% 83972241375657056057490261407972968652414535100474
% 82166370484403199890008895243450658541227588666881
% 16427171479924442928230863465674813919123162824586
% 17866458359124566529476545682848912883142607690042
% 24219022671055626321111109370544217506941658960408
% 07198403850962455444362981230987879927244284909188
% 84580156166097919133875499200524063689912560717606
% 05886116467109405077541002256983155200055935729725
% 71636269561882670428252483600823257530420752963450
% 
% Find the thirteen adjacent digits in the 1000-digit number
% that have the greatest product. What is the value of this product?

clear all
format long
RowNumber{1}  = '73167176531330624919225119674426574742355349194934';
RowNumber{2}  = '96983520312774506326239578318016984801869478851843';
RowNumber{3}  = '85861560789112949495459501737958331952853208805511';
RowNumber{4}  = '12540698747158523863050715693290963295227443043557';
RowNumber{5}  = '66896648950445244523161731856403098711121722383113';
RowNumber{6}  = '62229893423380308135336276614282806444486645238749';
RowNumber{7}  = '30358907296290491560440772390713810515859307960866';
RowNumber{8}  = '70172427121883998797908792274921901699720888093776';
RowNumber{9}  = '65727333001053367881220235421809751254540594752243';
RowNumber{10} = '52584907711670556013604839586446706324415722155397';
RowNumber{11} = '53697817977846174064955149290862569321978468622482';
RowNumber{12} = '83972241375657056057490261407972968652414535100474';
RowNumber{13} = '82166370484403199890008895243450658541227588666881';
RowNumber{14} = '16427171479924442928230863465674813919123162824586';
RowNumber{15} = '17866458359124566529476545682848912883142607690042';
RowNumber{16} = '24219022671055626321111109370544217506941658960408';
RowNumber{17} = '07198403850962455444362981230987879927244284909188';
RowNumber{18} = '84580156166097919133875499200524063689912560717606';
RowNumber{19} = '05886116467109405077541002256983155200055935729725';
RowNumber{20} = '71636269561882670428252483600823257530420752963450';
LongRow = [];
for i = 1:length(RowNumber)
    RowString = RowNumber{i};
    RowStringSeperated = regexprep(RowString,'([\d])','$1 ');
    LongRow = [LongRow str2num(RowStringSeperated)];
end

AdjNumbers = 13;
MaxResult = 0;
for i = 1:1000-AdjNumbers
    Result = 1;
    for j = i:i+AdjNumbers-1
        Result = Result*LongRow(j);
    end
    if Result > MaxResult
        MaxResult = Result
        HighSerie = LongRow(i:i+AdjNumbers-1)
    end
end

